{"ast":null,"code":"var _jsxFileName = \"/Users/nourmohamed/about-nour/src/components/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AWS from '../aws-config';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = ({\n  project\n}) => {\n  _s();\n  const [projectData, setProjectData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const dynamoDb = new AWS.DynamoDB.DocumentClient();\n      const params = {\n        TableName: 'Projects',\n        Key: {\n          ProjectName: project // e.g., \"Apollo\", \"About Nour Website\", etc.\n        }\n      };\n      try {\n        const data = await dynamoDb.get(params).promise();\n        if (data.Item) {\n          setProjectData(data.Item);\n        } else {\n          console.error('No data found for the given key.');\n        }\n      } catch (error) {\n        console.error('Error fetching project:', error);\n      }\n    };\n    fetchData();\n  }, [project]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: projectData ? projectData.Name || projectData.ProjectName : project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), projectData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [projectData.ProjectOverview && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Project Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: projectData.ProjectOverview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), projectData.Architecture && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: projectData.Architecture,\n          alt: \"Project Architecture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), projectData.TechnicalImplementation && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Technical Implementation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: projectData.TechnicalImplementation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), projectData.Configurations && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Configurations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: projectData.Configurations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), projectData.DataCenterCabling && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Data Center Cabling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: projectData.DataCenterCabling\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No project data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"VwkETmwzR6Pf+d4Han1RYhBwXss=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","AWS","Link","jsxDEV","_jsxDEV","Projects","project","_s","projectData","setProjectData","fetchData","dynamoDb","DynamoDB","DocumentClient","params","TableName","Key","ProjectName","data","get","promise","Item","console","error","className","children","Name","fileName","_jsxFileName","lineNumber","columnNumber","ProjectOverview","Architecture","src","alt","TechnicalImplementation","Configurations","DataCenterCabling","_c","$RefreshReg$"],"sources":["/Users/nourmohamed/about-nour/src/components/Projects.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AWS from '../aws-config';\nimport { Link } from 'react-router-dom';\n\nconst Projects = ({ project }) => {\n    const [projectData, setProjectData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const dynamoDb = new AWS.DynamoDB.DocumentClient();\n\n            const params = {\n                TableName: 'Projects',\n                Key: {\n                    ProjectName: project, // e.g., \"Apollo\", \"About Nour Website\", etc.\n                },\n            };\n\n            try {\n                const data = await dynamoDb.get(params).promise();\n                if (data.Item) {\n                    setProjectData(data.Item);\n                } else {\n                    console.error('No data found for the given key.');\n                }\n            } catch (error) {\n                console.error('Error fetching project:', error);\n            }\n        };\n\n        fetchData();\n    }, [project]);\n\n    return (\n        <div className=\"project-container\">\n            {/* Use projectData.Name if available, otherwise fallback to the project prop */}\n            <h1>{projectData ? projectData.Name || projectData.ProjectName : project}</h1>\n            {projectData ? (\n                <div>\n\n\n\n                    {/* Project Overview */}\n                    {projectData.ProjectOverview && (\n\n                        <div>\n                            <h2>Project Overview</h2>\n                            <p>{projectData.ProjectOverview}</p>\n                        </div>\n                    )}\n\n                    {/* Architecture Image */}\n                    {projectData.Architecture && (\n                        <div>\n                            <img src={projectData.Architecture} alt=\"Project Architecture\" />\n                        </div>\n                    )}\n\n                    {/* Technical Implementation */}\n                    {projectData.TechnicalImplementation && (\n                        <div>\n                            <h2>Technical Implementation</h2>\n                            <p>{projectData.TechnicalImplementation}</p>\n                        </div>\n                    )}\n\n                    {/* Configurations */}\n                    {projectData.Configurations && (\n                        <div>\n                            <h2>Configurations</h2>\n                            <p>{projectData.Configurations}</p>\n                        </div>\n                    )}\n\n                    {/* Data Center Cabling */}\n                    {projectData.DataCenterCabling && (\n                        <div>\n                            <h2>Data Center Cabling</h2>\n                            <p>{projectData.DataCenterCabling}</p>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <p>No project data found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}